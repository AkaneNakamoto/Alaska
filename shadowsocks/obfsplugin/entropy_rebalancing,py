#!/usr/bin/env python
#
# Copyright 2020-2025 Akane Nakamoto
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

from __future__ import absolute_import, division, print_function, \
    with_statement

import os
import sys
import hashlib
import logging
import binascii
import struct
import base64
import datetime
import random

from shadowsocks import common
from shadowsocks.obfsplugin import plain, verify_simple
from shadowsocks.common import to_bytes, to_str, ord


LOWBOUND = 3.4
HIGHBOUND = 4.6

MAXPADDINGBYTES = 128


class erb_simple(plain.plain):

    def __init__(self, method):
        super().__init__(method)

    def client_encode(self, buf):
        count = sum((byte.bit_count() for byte in buf))
        return super().client_encode(buf)
    
    def client_decode(self, buf):
        return super().client_decode(buf)
    
    def server_encode(self, buf):
        return super().server_encode(buf)
    
    def server_decode(self, buf):
        return super().server_decode(buf)
    




class erb_w_auth(verify_simple, erb_simple):

    def __init__(self, method):
        super().__init__(method)

    

if __name__ == "__main__":
    model = erb_simple("")
